//{ Пример вызова:
//		Путь_xUnitFor1C = "C:\Projects\GitHub\xUnitFor1C\";
//		ПутьГенератораМакета = Путь_xUnitFor1C + "ГенерацияМакетаДанных_На_БазеРеальныхДанных.epf";
//
//		СоздательМакетаДанныхНаОснованииЗапроса = ВнешниеОбработки.Создать(Путь_xUnitFor1C + "externals\GenerateData\СозданиеМакетаДанныхНаОснованииЗапроса.epf");
//		Макет = СоздательМакетаДанныхНаОснованииЗапроса.СоздатьМакетДанныхНаОснованииЗапроса(мРезультатЗапроса, ПутьГенератораМакета);
//		Макет.Показать();
//}
Функция СоздатьМакетДанныхНаОснованииЗапроса(мРезультатЗапроса, ПутьГенератораМакета) Экспорт
	//Если ПутьГенератораМакета = "" Тогда
	//	ПутьГенератораМакета = ВнешниеОбработки.Создать("C:\Projects\GitHub\1CUnit\ГенерацияМакетаДанных_На_БазеРеальныхДанных.epf");
	//КонецЕсли;
	
	//Запрос = Новый Запрос;
	//запрос.Текст = "
	//|ВЫБРАТЬ
	//|	""РегистрСведений"" КАК ТипДляГенератораМакетаДанных_xUnitFor1C,
	//|	""РегистрСведений1"" КАК ВидДляГенератораМакетаДанных_xUnitFor1C,
	//|	""ЗаписьРегистраСведений"" КАК ПрефиксИмениПеременнойДляГенератораМакетаДанных_xUnitFor1C,
	//|	РегистрСведений1.ПростойСправочник,
	//|	РегистрСведений1.ПростойСправочник2,
	//|	РегистрСведений1.РесурсЧисло,
	//|	РегистрСведений1.РесурсБулево
	//|ИЗ
	//|	РегистрСведений.РегистрСведений1 КАК РегистрСведений1";
	//мРезультатЗапроса = Запрос.Выполнить();
	Таблица = мРезультатЗапроса.Выгрузить();
	
	ШапкаДанных = Новый Структура();
	ШапкаДанных.Вставить("Тип", 1);
	ШапкаДанных.Вставить("Вид", 2);
	ШапкаДанных.Вставить("ИмяПеременной", 3);
	ШапкаДанных.Вставить("ТЧ", 4);
	ШапкаДанных.Вставить("Реквизит", 5);
	ШапкаДанных.Вставить("Значение", 6);
	ШапкаДанных.Вставить("Режим", 7);
	
	Макет = Новый ТабличныйДокумент;
	номерКолонки = 0;
	Для каждого ключЗначение Из ШапкаДанных Цикл
		номерКолонки = номерКолонки + 1;
		имяПоля = ключЗначение.Ключ;
		Макет.Область(1, номерКолонки, 1, номерКолонки).Текст = имяПоля ;
	КонецЦикла;
	
	МассивПропускаемыхКолонок = Новый Массив;
	МассивПропускаемыхКолонок.Добавить("ТипДляГенератораМакетаДанных_xUnitFor1C");
	МассивПропускаемыхКолонок.Добавить("ВидДляГенератораМакетаДанных_xUnitFor1C");
	МассивПропускаемыхКолонок.Добавить("ПрефиксИмениПеременнойДляГенератораМакетаДанных_xUnitFor1C");
	
	МассивПростыхТипов = Новый Массив;
	МассивПростыхТипов.Добавить(Тип("Число"));
	МассивПростыхТипов.Добавить(Тип("Строка"));
	МассивПростыхТипов.Добавить(Тип("Булево"));
	МассивПростыхТипов.Добавить(Тип("Дата"));
	
	номер = 1;
	индекс = 1;
	Для каждого Строка из Таблица Цикл
		номер = номер + 1;
		Макет.Область(номер, ШапкаДанных.Тип, номер, ШапкаДанных.Тип).Текст = Строка.ТипДляГенератораМакетаДанных_xUnitFor1C;
		Макет.Область(номер, ШапкаДанных.Вид, номер, ШапкаДанных.Вид).Текст = Строка.ВидДляГенератораМакетаДанных_xUnitFor1C;
		Макет.Область(номер, ШапкаДанных.ИмяПеременной, номер, ШапкаДанных.ИмяПеременной).Текст = Строка.ПрефиксИмениПеременнойДляГенератораМакетаДанных_xUnitFor1C + индекс;
		для каждого КолонкаЗапроса из Таблица.Колонки цикл
			Если МассивПропускаемыхКолонок.Найти(КолонкаЗапроса.Имя) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			номер = номер + 1;
			имяКолонки = КолонкаЗапроса.имя;
			Значение = Строка[имяКолонки];
			Макет.Область(номер, ШапкаДанных.Реквизит, номер, ШапкаДанных.Реквизит).Текст = имяКолонки;
			Макет.Область(номер, ШапкаДанных.Значение, номер, ШапкаДанных.Значение).Текст = Значение;
			Если МассивПростыхТипов.Найти(ТипЗнч(Значение)) = Неопределено Тогда
				Макет.Область(номер, ШапкаДанных.Режим, номер, ШапкаДанных.Режим).Текст = "Наименование";
			КонецЕсли;
		КонецЦикла;
		индекс = индекс + 1;
	КонецЦикла;
	
	//Макет.Показать();
	Возврат Макет;
КонецФункции
