&НаКлиенте
Перем юТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
    юТест = ЮнитТестирование;
    
    ВсеТесты = Новый Массив;

	ПараметрыТеста = Новый Структура("ПредставлениеТеста,ИмяТеста,Транзакция,Параметр", "Тест с опциями", "ТестСОпциями", Истина, "тест представления");
	ВсеТесты.Добавить(ПараметрыТеста);
	
	ПараметрыТеста = Новый Структура("ИмяТеста,Транзакция", "ТестСОпциями_БезПараметра", Истина);
	ВсеТесты.Добавить(ПараметрыТеста);
	
	ПараметрыТеста = Новый Структура("ПредставлениеТеста,ИмяТеста,Транзакция,Параметр", "ТестСОпциями_ ПараметрЗаданКакНеопределено", "ТестСОпциями_ПараметрМожетБытьНеЗадан", Истина, Неопределено);
	ВсеТесты.Добавить(ПараметрыТеста);

	ВсеТесты.Добавить("Тест_Обычный");

    Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Процедура ТестСОпциями(Парам) Экспорт

	юТест.ПроверитьЗаполненность(Парам, "ТестСОпциями(Парам)");
	
КонецПроцедуры

&НаКлиенте
Процедура ТестСОпциями_ПараметрМожетБытьНеЗадан(Парам) Экспорт	
КонецПроцедуры

&НаКлиенте
Процедура ТестСОпциями_БезПараметра() Экспорт

КонецПроцедуры

&НаКлиенте
Процедура Тест_Обычный() Экспорт
	
	юТест.Проверить(Истина, "Значение ложно");
	
КонецПроцедуры
