{2,
{28,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{17,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},0,1},0,"","",1,
{17,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,0,1}
},"
//{ основная процедура для юнит-тестирования xUnitFor1C
&НаКлиенте
Перем ЮТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеВКоллекцию_Массив"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеВКоллекцию_Массив_ЭлементНеНайден"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированныйМассив"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированныйМассив_ЭлементНеНайден"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеВКоллекцию_Структура"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеВКоллекцию_Структура_ЭлементНеНайден"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированнаяСтруктура"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированнаяСтруктура_ЭлементНеНайден"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеВКоллекцию_Соответствие"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеВКоллекцию_Соответствие_ЭлементНеНайден"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированноеСоответствие"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированноеСоответствие_ЭлементНеНайден"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеВКоллекцию_СписокЗначений"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеВКоллекцию_СписокЗначений_ЭлементНеНайден"");

	Возврат ВсеТесты;
	
КонецФункции
//}

//{ блок юнит-тестов - сами тесты

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_Массив() Экспорт
	Коллекция = Новый Массив();
	Элемент = 20;
	Коллекция.Добавить(Элемент);
	
	ЮТест.ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, ""Элемент, Коллекция"");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_Массив_ЭлементНеНайден() Экспорт
	Коллекция = Новый Массив();
	Элемент = 20;
	Коллекция.Добавить(Элемент);
	
	ПроверитьНеверныйЭлемент(10, Коллекция);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированныйМассив() Экспорт
	Коллекция = Новый Массив();
	Элемент = 20;
	Коллекция.Добавить(Элемент);
	Коллекция = Новый ФиксированныйМассив(Коллекция);
	
	ЮТест.ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, ""Элемент, Коллекция"");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированныйМассив_ЭлементНеНайден() Экспорт
	Коллекция = Новый Массив();
	Элемент = 20;
	Коллекция.Добавить(Элемент);
	Коллекция = Новый ФиксированныйМассив(Коллекция);
	
	ПроверитьНеверныйЭлемент(10, Коллекция);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_Структура() Экспорт
	Коллекция = Новый Структура();
	Элемент = 20;
	Коллекция.Вставить(""Ключ"", Элемент);
	
	ЮТест.ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, ""Элемент, Коллекция"");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_Структура_ЭлементНеНайден() Экспорт
	Коллекция = Новый Структура();
	Элемент = 20;
	Коллекция.Вставить(""Ключ"", Элемент);
	
	ПроверитьНеверныйЭлемент(10, Коллекция);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированнаяСтруктура() Экспорт
	Коллекция = Новый Структура();
	Элемент = 20;
	Коллекция.Вставить(""Ключ"", Элемент);
	Коллекция = Новый ФиксированнаяСтруктура(Коллекция);
	
	ЮТест.ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, ""Элемент, Коллекция"");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированнаяСтруктура_ЭлементНеНайден() Экспорт
	Коллекция = Новый Структура();
	Элемент = 20;
	Коллекция.Вставить(""Ключ"", Элемент);
	Коллекция = Новый ФиксированнаяСтруктура(Коллекция);
	
	ПроверитьНеверныйЭлемент(10, Коллекция);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_Соответствие() Экспорт
	Коллекция = Новый Соответствие();
	Элемент = 20;
	Коллекция.Вставить(""Ключ"", Элемент);
	
	ЮТест.ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, ""Элемент, Коллекция"");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_Соответствие_ЭлементНеНайден() Экспорт
	Коллекция = Новый Соответствие();
	Элемент = 20;
	Коллекция.Вставить(""Ключ"", Элемент);
	
	ПроверитьНеверныйЭлемент(10, Коллекция);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированноеСоответствие() Экспорт
	Коллекция = Новый Соответствие();
	Элемент = 20;
	Коллекция.Вставить(""Ключ"", Элемент);
	Коллекция = Новый ФиксированноеСоответствие(Коллекция);
	
	ЮТест.ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, ""Элемент, Коллекция"");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированноеСоответствие_ЭлементНеНайден() Экспорт
	Коллекция = Новый Соответствие();
	Элемент = 20;
	Коллекция.Вставить(""Ключ"", Элемент);
	Коллекция = Новый ФиксированноеСоответствие(Коллекция);
	
	ПроверитьНеверныйЭлемент(10, Коллекция);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_СписокЗначений() Экспорт
	Коллекция = Новый СписокЗначений();
	Элемент = 20;
	Коллекция.Добавить(Элемент, ""Ключ"");
	
	ЮТест.ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, ""Элемент, Коллекция"");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_СписокЗначений_ЭлементНеНайден() Экспорт
	Коллекция = Новый СписокЗначений();
	Элемент = 20;
	Коллекция.Добавить(Элемент, ""Ключ"");
	
	ПроверитьНеверныйЭлемент(10, Коллекция);
КонецПроцедуры


&НаКлиенте
Процедура ПроверитьНеверныйЭлемент(НеверныйЭлемент, Коллекция)
	БылоИсключение = Ложь;
	Попытка
		ЮТест.ПроверитьВхождениеВКоллекцию(НеверныйЭлемент, Коллекция, ""Элемента нет в Коллекция"");
	Исключение
		Ошибка = ОписаниеОшибки();
		БылоИсключение = Истина;
	КонецПопытки;
	ЮТест.Проверить(БылоИсключение, ""Ожидала исключения от """"ПроверитьВхождениеВКоллекцию"""", а его не было"");
	ЮТест.ПроверитьВхождение(Ошибка, ""Не нашли элемент <""+НеверныйЭлемент+""> в коллекции, а хотели, чтобы он был в коллекции."", ""текст исключения"");
КонецПроцедуры

//} ",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",ba46524a-1f27-4008-8686-2703897f6737}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0}
}