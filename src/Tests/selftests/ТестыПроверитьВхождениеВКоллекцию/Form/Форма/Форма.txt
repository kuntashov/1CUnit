
//{ основная процедура для юнит-тестирования xUnitFor1C
&НаКлиенте
Перем ЮТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("ТестДолжен_ПроверитьВхождениеВКоллекцию_Массив");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьВхождениеВКоллекцию_Массив_ЭлементНеНайден");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированныйМассив");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированныйМассив_ЭлементНеНайден");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьВхождениеВКоллекцию_Структура");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьВхождениеВКоллекцию_Структура_ЭлементНеНайден");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированнаяСтруктура");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированнаяСтруктура_ЭлементНеНайден");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьВхождениеВКоллекцию_Соответствие");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьВхождениеВКоллекцию_Соответствие_ЭлементНеНайден");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированноеСоответствие");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированноеСоответствие_ЭлементНеНайден");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьВхождениеВКоллекцию_СписокЗначений");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьВхождениеВКоллекцию_СписокЗначений_ЭлементНеНайден");

	Возврат ВсеТесты;
	
КонецФункции
//}

//{ блок юнит-тестов - сами тесты

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_Массив() Экспорт
	Коллекция = Новый Массив();
	Элемент = 20;
	Коллекция.Добавить(Элемент);
	
	ЮТест.ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, "Элемент, Коллекция");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_Массив_ЭлементНеНайден() Экспорт
	Коллекция = Новый Массив();
	Элемент = 20;
	Коллекция.Добавить(Элемент);
	
	ПроверитьНеверныйЭлемент(10, Коллекция);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированныйМассив() Экспорт
	Коллекция = Новый Массив();
	Элемент = 20;
	Коллекция.Добавить(Элемент);
	Коллекция = Новый ФиксированныйМассив(Коллекция);
	
	ЮТест.ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, "Элемент, Коллекция");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированныйМассив_ЭлементНеНайден() Экспорт
	Коллекция = Новый Массив();
	Элемент = 20;
	Коллекция.Добавить(Элемент);
	Коллекция = Новый ФиксированныйМассив(Коллекция);
	
	ПроверитьНеверныйЭлемент(10, Коллекция);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_Структура() Экспорт
	Коллекция = Новый Структура();
	Элемент = 20;
	Коллекция.Вставить("Ключ", Элемент);
	
	ЮТест.ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, "Элемент, Коллекция");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_Структура_ЭлементНеНайден() Экспорт
	Коллекция = Новый Структура();
	Элемент = 20;
	Коллекция.Вставить("Ключ", Элемент);
	
	ПроверитьНеверныйЭлемент(10, Коллекция);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированнаяСтруктура() Экспорт
	Коллекция = Новый Структура();
	Элемент = 20;
	Коллекция.Вставить("Ключ", Элемент);
	Коллекция = Новый ФиксированнаяСтруктура(Коллекция);
	
	ЮТест.ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, "Элемент, Коллекция");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированнаяСтруктура_ЭлементНеНайден() Экспорт
	Коллекция = Новый Структура();
	Элемент = 20;
	Коллекция.Вставить("Ключ", Элемент);
	Коллекция = Новый ФиксированнаяСтруктура(Коллекция);
	
	ПроверитьНеверныйЭлемент(10, Коллекция);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_Соответствие() Экспорт
	Коллекция = Новый Соответствие();
	Элемент = 20;
	Коллекция.Вставить("Ключ", Элемент);
	
	ЮТест.ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, "Элемент, Коллекция");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_Соответствие_ЭлементНеНайден() Экспорт
	Коллекция = Новый Соответствие();
	Элемент = 20;
	Коллекция.Вставить("Ключ", Элемент);
	
	ПроверитьНеверныйЭлемент(10, Коллекция);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированноеСоответствие() Экспорт
	Коллекция = Новый Соответствие();
	Элемент = 20;
	Коллекция.Вставить("Ключ", Элемент);
	Коллекция = Новый ФиксированноеСоответствие(Коллекция);
	
	ЮТест.ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, "Элемент, Коллекция");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_ФиксированноеСоответствие_ЭлементНеНайден() Экспорт
	Коллекция = Новый Соответствие();
	Элемент = 20;
	Коллекция.Вставить("Ключ", Элемент);
	Коллекция = Новый ФиксированноеСоответствие(Коллекция);
	
	ПроверитьНеверныйЭлемент(10, Коллекция);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_СписокЗначений() Экспорт
	Коллекция = Новый СписокЗначений();
	Элемент = 20;
	Коллекция.Добавить(Элемент, "Ключ");
	
	ЮТест.ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, "Элемент, Коллекция");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеВКоллекцию_СписокЗначений_ЭлементНеНайден() Экспорт
	Коллекция = Новый СписокЗначений();
	Элемент = 20;
	Коллекция.Добавить(Элемент, "Ключ");
	
	ПроверитьНеверныйЭлемент(10, Коллекция);
КонецПроцедуры


&НаКлиенте
Процедура ПроверитьНеверныйЭлемент(НеверныйЭлемент, Коллекция)
	БылоИсключение = Ложь;
	Попытка
		ЮТест.ПроверитьВхождениеВКоллекцию(НеверныйЭлемент, Коллекция, "Элемента нет в Коллекция");
	Исключение
		Ошибка = ОписаниеОшибки();
		БылоИсключение = Истина;
	КонецПопытки;
	ЮТест.Проверить(БылоИсключение, "Ожидала исключения от ""ПроверитьВхождениеВКоллекцию"", а его не было");
	ЮТест.ПроверитьВхождение(Ошибка, "Не нашли элемент <"+НеверныйЭлемент+"> в коллекции, а хотели, чтобы он был в коллекции.", "текст исключения");
КонецПроцедуры

//} 